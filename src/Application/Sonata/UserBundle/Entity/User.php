<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Symfony\Component\Validator\Constraints as Assert;
use Vich\UploaderBundle\Mapping\Annotation as Vich;
use Undf\UserBundle\Entity\FacebookUserInterface;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 * @Vich\Uploadable
 */
class User extends BaseUser implements FacebookUserInterface
{

    /**
     * @var integer $id
     */
    protected $id;

    /**
     * @Assert\File(
     *     maxSize="1M",
     *     mimeTypes={"image/png", "image/jpeg", "image/pjpeg"}
     * )
     * @Vich\UploadableField(mapping="profile_image", fileNameProperty="imageName")
     *
     * @var File $image
     */
    protected $image;

    /**
     *
     * @var string $imageName
     */
    protected $imageName;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    public function getImage()
    {
        return $this->image;
    }

    public function setImage($image)
    {
        $this->image = $image;
    }

    public function getImageName()
    {
        return $this->imageName;
    }

    public function setImageName($imageName)
    {
        $this->imageName = $imageName;
    }

    public function getFacebookId()
    {
        return $this->facebookUid;
    }

    public function setFacebookId($fbId)
    {
        $this->facebookUid = $fbId;
    }

    /**
     * @param Array
     */
    public function setFBData($fbdata)
    {
        if (isset($fbdata['id'])) {
            $this->setFacebookId($fbdata['id']);
            $this->addRole('ROLE_FACEBOOK');
        }
        if (isset($fbdata['first_name'])) {
            $this->setFirstname($fbdata['first_name']);
        }
        if (isset($fbdata['last_name'])) {
            $this->setLastname($fbdata['last_name']);
        }
        if (isset($fbdata['email'])) {
            $this->setEmail($fbdata['email']);
        }
        if (isset($fbdata['name']) && !$this->getUsername()) {
            $this->setUsername($fbdata['name']);
        }
    }

    public function hasFacebookRole()
    {
        return in_array('ROLE_FACEBOOK', $this->getRoles());
    }

    /**
     * Serializes the user.
     *
     * The serialized data have to contain the fields used by the equals method and the username.
     *
     * @return string
     */
    public function serialize()
    {
        return serialize(array(
                    $this->password,
                    $this->salt,
                    $this->usernameCanonical,
                    $this->username,
                    $this->expired,
                    $this->locked,
                    $this->credentialsExpired,
                    $this->enabled,
                    $this->id,
                    $this->email,
                    $this->emailCanonical,
                    $this->imageName,
                    $this->facebookUid,
                    $this->locale
                ));
    }

    /**
     * Unserializes the user.
     *
     * @param string $serialized
     */
    public function unserialize($serialized)
    {
        $data = unserialize($serialized);
        // add a few extra elements in the array to ensure that we have enough keys when unserializing
        // older data which does not include all properties.
        $data = array_merge($data, array_fill(0, 2, null));

        list(
                $this->password,
                $this->salt,
                $this->usernameCanonical,
                $this->username,
                $this->expired,
                $this->locked,
                $this->credentialsExpired,
                $this->enabled,
                $this->id,
                $this->email,
                $this->emailCanonical,
                $this->imageName,
                $this->facebookUid,
                $this->locale
                ) = $data;
    }

}